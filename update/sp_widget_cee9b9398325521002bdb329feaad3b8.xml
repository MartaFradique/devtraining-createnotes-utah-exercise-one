<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($rootScope, $scope) {
  /* widget controller */
  var c = this;

  // Function to refresh notes
  c.refreshNotes = function() {
    c.server.update().then(function(response) {
      c.data.notes = response.data.notes;
    });
  };

  // Select item function
  c.selectItem = function(idx) {
    var id = c.data.notes[idx].sys_id;
    console.log('Note ID: ' + id);
    $rootScope.noteID = id;
    $rootScope.$emit('selectNote', id);
  };

  // Listen for the update event from the second widget
  $rootScope.$on('noteUpdated', function() {
    // Refresh notes in the first widget
    c.refreshNotes();
  });
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>.edit-icon {
  float: right;
  cursor: pointer;
  color: #007bff;
  margin-top: -30px; /* Adjust based on your design */
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>widget_1</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>widget 1</name>
        <option_schema>[{"hint":"Specify a title for the Notes List widget","name":"title","section":"other","default_value":"Notes","label":"Title","type":"string"},{"name":"maximum_records_to_display","section":"other","default_value":"5","label":"Maximum records to display","type":"choice","choices":[{"label":"Select the maximum number of records to display","value":"Select the maximum number of records to display"}]}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  data.notes = [];
  var noteGR = new GlideRecord('x_snc_createnotes_note');
  noteGR.orderByDesc('sys_created_on');
  noteGR.setLimit(options.maximum_records_to_display);
  noteGR.query();
  while (noteGR.next()) {
    var noteObj = {};
    $sp.getRecordDisplayValues(noteObj, noteGR, 'number,title,sys_id');
    noteObj.note = noteGR.getValue('note').slice(0, 20);
    data.notes.push(noteObj);
  }
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-30 09:35:00</sys_created_on>
        <sys_id>cee9b9398325521002bdb329feaad3b8</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>widget 1</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_cee9b9398325521002bdb329feaad3b8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-30 12:00:58</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading clearfix">
    <h3 class="panel-title pull-left">
      {{::c.options.title}}
    </h3>
  </div>
  <div class="list-group">
    <a class="list-group-item" ng-repeat="note in data.notes">
      <h4 class="list-group-item-heading">
        {{note.title}}
      </h4>
      <p class="list-group-item-text">
        {{note.note}}
      </p>
      <!-- Pencil icon to edit, only this icon will trigger the selectItem function -->
      <span class="edit-icon" ng-click="c.selectItem($index)">
        <i class="fa fa-pencil" aria-hidden="true"></i>
      </span>
    </a>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
